[{"F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\index.js":"1","F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\components\\Footer\\Footer.js":"2","F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\data\\category.js":"3","F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\App.js":"4"},{"size":332,"mtime":1625376604000,"results":"5","hashOfConfig":"6"},{"size":870,"mtime":1651675627257,"results":"7","hashOfConfig":"6"},{"size":507,"mtime":1625376604000,"results":"8","hashOfConfig":"6"},{"size":2465,"mtime":1651675685149,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"132uxwv",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\index.js",[],"F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\components\\Footer\\Footer.js",[],"F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\data\\category.js",[],"F:\\Newton School\\Projects\\React Project\\react-dictionary-wordhunt-master\\react-dictionary-wordhunt-master\\src\\App.js",["19"],"import { Container, Switch, withStyles } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Definitions from \"./components/Definitions/Definitions\";\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n    // eslint-disable-next-line\n  }, [word, category]);\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      \"&$checked\": {\n        color: grey[900],\n      },\n      \"&$checked + $track\": {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\n        color: LightTheme ? \"black\" : \"white\",\n        transition: \"all 0.5s linear\",\n      }}\n    >\n      <Container\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100vh\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <div\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\n        >\n          <span>{LightTheme ? \"Dark\" : \"Light\"} Mode</span>\n          <PurpleSwitch\n            checked={LightTheme}\n            onChange={() => setLightTheme(!LightTheme)}\n          />\n        </div>\n        <Header\n          setWord={setWord}\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setMeanings={setMeanings}\n          LightTheme={LightTheme}\n        />\n        {meanings && (\n          <Definitions\n            meanings={meanings}\n            word={word}\n            LightTheme={LightTheme}\n            category={category}\n          />\n        )}\n      </Container>\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","severity":1,"message":"21","line":7,"column":8,"nodeType":"22","messageId":"23","endLine":7,"endColumn":14},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar"]